{"version":3,"sources":["assets/pdfs/resume.pdf","components/Header/Header.js","constants/links.js","components/Footer/Footer.js","pages/LandingPage/LandingPage.js","pages/AboutPage/AboutPage.js","pages/ResumePage/ResumePage.js","pages/ProjectsPage/ProjectsPage.js","pages/SpotifyPage/SpotifyPage.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync"],"names":["module","exports","Header","props","useState","hovered","setHovered","flavorText","setFlavorText","flavorTextArr","toggleHover","Math","floor","random","length","className","to","onMouseEnter","onMouseLeave","medium","up","mode","navBarMenuItems","small","down","id","type","icon","isSiderCollapse","onClick","setSiderCollapse","linkedIn","github","email","Footer","console","log","links","size","href","target","window","location","LandingPage","span","AboutPage","pdfjs","GlobalWorkerOptions","workerSrc","version","ResumePage","setNumPages","resume","download","file","onLoadSuccess","numPages","pageNumber","scale","ProjectsPage","SpotifyPage","songCovers","setSongCovers","useEffect","axios","get","then","res","headers","Authorization","songs","data","tracks","items","images","Object","values","forEach","val","push","track","album","url","tmp","filter","v","indexOf","toString","imagesHTML","map","src","Item","key","App","basename","exact","path","Sider","trigger","collapsible","collapsedWidth","collapsed","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","e","Error","code","keys","resolve"],"mappings":"uFAAAA,EAAOC,QAAU,IAA0B,oC,uSCyD5BC,EAlDA,SAAAC,GAAU,IAAD,EACQC,oBAAS,GADjB,mBACfC,EADe,KACNC,EADM,OAEcF,mBAAS,GAFvB,mBAEfG,EAFe,KAEHC,EAFG,KAGhBC,EAAgB,CACpB,yBACA,uBACA,qBACA,yBACA,kBACA,oBACA,cACA,gBACA,sBAGIC,EAAc,WAClBJ,GAAYD,GACZG,EACEC,EAAcE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAcK,WAI3D,OACE,kBAAC,IAAOZ,OAAR,CAAea,UAAU,UACvB,kBAAC,IAAD,CAAMC,GAAG,KACP,uBACED,UAAU,mBACVE,aAAcP,EACdQ,aAAcR,GAEbL,EAAUE,EAAa,sBAG5B,kBAAC,aAAD,CAAYY,QAAM,EAACC,IAAE,GACnB,yBAAKL,UAAU,UACb,kBAAC,IAAD,CAAMM,KAAK,cAAclB,EAAMmB,mBAGnC,kBAAC,aAAD,CAAYC,OAAK,EAACC,MAAI,GACpB,kBAAC,IAAD,CACEC,GAAG,sBACHC,KAAK,OACLC,KAAMxB,EAAMyB,gBAAkB,YAAc,cAC5CC,QAAS,kBAAM1B,EAAM2B,kBAAkB3B,EAAMyB,uBClDxC,GACbG,SAAU,wDACVC,OAAQ,6BACRC,MAAO,+BCoCMC,EAlCA,WAEb,OADAC,QAAQC,IAAIC,GAEV,kBAAC,IAAOH,OAAR,CAAenB,UAAU,UACvB,yBAAKA,UAAU,oBACb,uBAAGA,UAAU,eAAb,gBACA,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CACEW,KAAK,OACLC,KAAK,WACLW,KAAK,QACLC,KAAMF,EAAMN,SACZS,OAAO,WAET,kBAAC,IAAD,CACEd,KAAK,OACLC,KAAK,SACLW,KAAK,QACLC,KAAMF,EAAML,OACZQ,OAAO,WAET,kBAAC,IAAD,CACEd,KAAK,OACLC,KAAK,OACLW,KAAK,QACLT,QAAS,kBAAOY,OAAOC,SAASH,KAAhB,iBAAiCF,EAAMJ,QACvDO,OAAO,e,kBCLJG,EAvBK,WAClB,OACE,yBAAK5B,UAAU,oBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK6B,KAAM,IACT,yBAAK7B,UAAU,qBAEjB,kBAAC,IAAD,CAAK6B,KAAM,IACT,yBAAK7B,UAAU,gCACb,yBAAKA,UAAU,mBACb,sCACA,mCACM,mCACJ,0DCLD8B,EARG,WAChB,OACE,yBAAK9B,UAAU,wBACb,8C,kCCCN+B,QAAMC,oBAAoBC,UAA1B,kDAAiFF,QAAMG,QAAvF,kBAEA,IAmBeC,EAnBI,WAAO,IAAD,EACS9C,mBAAS,GADlB,mBACN+C,GADM,WAOvB,OACE,yBAAKpC,UAAU,oBACb,uBAAGwB,KAAMa,IAAQC,UAAQ,EAAC5B,GAAG,0BAC3B,kBAAC,IAAD,CAAMC,KAAK,cAEb,kBAAC,WAAD,CAAU4B,KAAMF,IAAQG,cATE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/BL,EAAYK,KASR,kBAAC,OAAD,CAAMC,WAAY,EAAGC,MAAO,QCarBC,EAhCM,WACnB,OACE,yBAAK5C,UAAU,sBAyBb,8C,kBCiBS6C,EA5CK,WAAO,IAAD,EACYxD,mBAAS,IADrB,mBACjByD,EADiB,KACLC,EADK,KAyCxB,OAtCAC,qBAAU,WAGRC,IACGC,IADH,2DAFkB,qCAIfC,MAAK,SAAAC,GAAG,OAAIhC,QAAQC,IAAI+B,MAE3BH,IACGC,IAAI,8DAA+D,CAClEG,QAAS,CACPC,cACE,4JAGLH,MAAK,SAAAC,GACJ,IAAMG,EAAQH,EAAII,KAAKC,OAAOC,MAC1BC,EAAS,GACbC,OAAOC,OAAON,GAAOO,SAAQ,SAAAC,GAC3BJ,EAAOK,KAAKD,EAAIE,MAAMC,MAAMP,OAAO,GAAGQ,QAGxC,IAAIC,EAAM,GACVT,EAASA,EAAOU,QAAO,SAASC,GAC9B,GAAIF,EAAIG,QAAQD,EAAEE,YAAc,EAE9B,OADAJ,EAAIJ,KAAKM,EAAEE,YACJF,KAIX,IAAIG,EAAa,GACjBd,EAAOe,KAAI,SAAAX,GACTU,EAAWT,KAAK,yBAAKW,IAAKZ,QAG5BhB,EAAc0B,SAIb,6BAAM3B,IC9BTvC,EAAkB,CACtB,kBAAC,IAAKqE,KAAN,CAAWC,IAAI,KACb,kBAAC,IAAD,CAAM5E,GAAG,UACP,uBAAGD,UAAU,eAAb,WAGJ,kBAAC,IAAK4E,KAAN,CAAWC,IAAI,KACb,kBAAC,IAAD,CAAM5E,GAAG,WACP,uBAAGD,UAAU,eAAb,YAGJ,kBAAC,IAAK4E,KAAN,CAAWC,IAAI,KACb,kBAAC,IAAD,CAAM5E,GAAG,aACP,uBAAGD,UAAU,eAAb,eAoDS8E,EA/CH,WAAO,IAAD,EAC4BzF,oBAAS,GADrC,mBACTwB,EADS,KACQE,EADR,KAGhB,OACE,kBAAC,IAAD,CAAQgE,SAAS,cACf,kBAAC,qBAAD,KACE,kBAAC,IAAD,CAAQ/E,UAAU,UAChB,kBAAC,IAAD,CAAQA,UAAU,WAChB,kBAAC,EAAD,CACEa,gBAAiBA,EACjBE,iBAAkBA,EAClBR,gBAAiBA,IAEnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,QAGJ,kBAAC,EAAD,OAEF,kBAAC,IAAOC,MAAR,CACElF,UAAU,oBACVmF,QAAS,KACTC,aAAW,EACXC,eAAgB,EAChBC,UAAWzE,GAEX,kBAAC,IAAD,CAAMP,KAAK,UAAUC,Q,cC3DbgF,QACW,cAA7B7D,OAAOC,SAAS6D,UAEe,UAA7B9D,OAAOC,SAAS6D,UAEhB9D,OAAOC,SAAS6D,SAASC,MACvB,2DCTNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7C,MAAK,SAAA8C,GACjCA,EAAaC,iB,iBEnInB,SAASC,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BlH,EAAOC,QAAUiH,EACjBA,EAAoBzF,GAAK,K","file":"static/js/main.16d92ed3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.dde59e89.pdf\";","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Layout, Menu } from 'antd'\r\nimport { Breakpoint } from 'react-socks'\r\n\r\n//TODO: Sider will not collapse if window is resized\r\n\r\nconst Header = props => {\r\n  const [hovered, setHovered] = useState(false)\r\n  const [flavorText, setFlavorText] = useState(0)\r\n  const flavorTextArr = [\r\n    '/art par-kin-vIn-chAH/',\r\n    'THANUT PARKEENVINCHA',\r\n    'ARTY PARKEENVINCHA',\r\n    'SANTA CRUZ BANANA SLUG',\r\n    'LOWELL CARDINAL',\r\n    'FROM THE BAY AREA',\r\n    'FROM CANADA',\r\n    'FROM THAILAND',\r\n    'ASPIRING DEVELOPER',\r\n  ]\r\n\r\n  const toggleHover = () => {\r\n    setHovered(!hovered)\r\n    setFlavorText(\r\n      flavorTextArr[Math.floor(Math.random() * flavorTextArr.length)]\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout.Header className=\"header\">\r\n      <Link to=\"/\">\r\n        <p\r\n          className=\"header-font name\"\r\n          onMouseEnter={toggleHover}\r\n          onMouseLeave={toggleHover}\r\n        >\r\n          {hovered ? flavorText : 'ART PARKEENVINCHA'}\r\n        </p>\r\n      </Link>\r\n      <Breakpoint medium up>\r\n        <div className=\"navbar\">\r\n          <Menu mode=\"horizontal\">{props.navBarMenuItems}</Menu>\r\n        </div>\r\n      </Breakpoint>\r\n      <Breakpoint small down>\r\n        <Button\r\n          id=\"sider-toggle-button\"\r\n          type=\"link\"\r\n          icon={props.isSiderCollapse ? 'menu-fold' : 'menu-unfold'}\r\n          onClick={() => props.setSiderCollapse(!props.isSiderCollapse)}\r\n        ></Button>\r\n      </Breakpoint>\r\n    </Layout.Header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","export default {\r\n  linkedIn: 'https://www.linkedin.com/in/thanut-art-parkeenvincha/',\r\n  github: 'https://github.com/artpark',\r\n  email: 'art.parkeenvincha@gmail.com',\r\n}\r\n","import React from 'react'\r\nimport { Button, Layout } from 'antd'\r\n\r\nimport links from '../../constants/links'\r\n\r\nconst Footer = () => {\r\n  console.log(links)\r\n  return (\r\n    <Layout.Footer className=\"footer\">\r\n      <div className=\"footer-container\">\r\n        <p className=\"footer-font\">CONTACT INFO</p>\r\n        <div className=\"footer-buttons\">\r\n          <Button\r\n            type=\"link\"\r\n            icon=\"linkedin\"\r\n            size=\"large\"\r\n            href={links.linkedIn}\r\n            target=\"_blank\"\r\n          ></Button>\r\n          <Button\r\n            type=\"link\"\r\n            icon=\"github\"\r\n            size=\"large\"\r\n            href={links.github}\r\n            target=\"_blank\"\r\n          ></Button>\r\n          <Button\r\n            type=\"link\"\r\n            icon=\"mail\"\r\n            size=\"large\"\r\n            onClick={() => (window.location.href = `mailto:${links.email}`)}\r\n            target=\"_blank\"\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    </Layout.Footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Col, Row, Layout } from 'antd'\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <div className=\"banner-container\">\r\n      <Row>\r\n        <Col span={10}>\r\n          <div className=\"image-container\"></div>\r\n        </Col>\r\n        <Col span={14}>\r\n          <div className=\"banner-description-container\">\r\n            <div className=\"text-float-left\">\r\n              <h1>Hello!</h1>\r\n              <h2>\r\n                I'm <span> </span>\r\n                <span>Art Parkeenvincha</span>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LandingPage\r\n","import React from 'react'\r\nimport { Layout } from 'antd'\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <div className=\"about-page-container\">\r\n      <h1>Coming soon!</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AboutPage\r\n","import React, { useState } from 'react'\r\nimport { Icon } from 'antd'\r\nimport { Document, Page } from 'react-pdf'\r\nimport { pdfjs } from 'react-pdf'\r\n\r\nimport resume from '../../assets/pdfs/resume.pdf'\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\r\n\r\nconst ResumePage = () => {\r\n  const [numPages, setNumPages] = useState(0)\r\n\r\n  const onDocumentLoadSuccess = ({ numPages }) => {\r\n    setNumPages(numPages)\r\n  }\r\n\r\n  return (\r\n    <div className=\"resume-container\">\r\n      <a href={resume} download id=\"resume-download-button\">\r\n        <Icon type=\"download\"></Icon>\r\n      </a>\r\n      <Document file={resume} onLoadSuccess={onDocumentLoadSuccess}>\r\n        <Page pageNumber={1} scale={0.5} />\r\n      </Document>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResumePage\r\n","import React from 'react'\r\nimport { Card, Col, Row } from 'antd'\r\n\r\nconst ProjectsPage = () => {\r\n  return (\r\n    <div className=\"projects-container\">\r\n      {/* <Row gutter={[25, 25]}>\r\n        <Col span={12}>\r\n          <Card className=\"projects-card\" title=\"Card title\" bordered={false}>\r\n            Card content\r\n          </Card>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Card className=\"projects-card\" title=\"Card title\" bordered={false}>\r\n            Card content\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[25, 25]}>\r\n        <Col span={12}>\r\n          <Card className=\"projects-card\" title=\"Card title\" bordered={false}>\r\n            Card content\r\n          </Card>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Card className=\"projects-card\" title=\"Card title\" bordered={false}>\r\n            Card content\r\n          </Card>\r\n        </Col>\r\n      </Row> */}\r\n      <h1>Coming soon!</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectsPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst SpotifyPage = () => {\r\n  const [songCovers, setSongCovers] = useState([])\r\n\r\n  useEffect(() => {\r\n    const client_id = 'be30a1ed57db437d910240e2f2685bc1'\r\n    var key = ''\r\n    axios\r\n      .get(`https://accounts.spotify.com/authorize?client_id=${client_id}`)\r\n      .then(res => console.log(res))\r\n\r\n    axios\r\n      .get('https://api.spotify.com/v1/playlists/1bcLTiVH5kKW8dCZyxYl7w', {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer BQChwLm7Q-3rcxfhmz-P0t1sewlviMIJMx0h4wTQvXKyqv4wYVK2tdisOZzItvv5c3263sJBU2kT0boROhmRk3S-_uQKfBrhqI4_JIe1lVeOOs6zyz7oh5zsV-MGuo5XOjsFuzWv0hT2_fE',\r\n        },\r\n      })\r\n      .then(res => {\r\n        const songs = res.data.tracks.items\r\n        let images = []\r\n        Object.values(songs).forEach(val => {\r\n          images.push(val.track.album.images[1].url)\r\n        })\r\n\r\n        var tmp = []\r\n        images = images.filter(function(v) {\r\n          if (tmp.indexOf(v.toString()) < 0) {\r\n            tmp.push(v.toString())\r\n            return v\r\n          }\r\n        })\r\n\r\n        var imagesHTML = []\r\n        images.map(val => {\r\n          imagesHTML.push(<img src={val} />)\r\n        })\r\n\r\n        setSongCovers(imagesHTML)\r\n      })\r\n  })\r\n\r\n  return <div>{songCovers}</div>\r\n}\r\n\r\nexport default SpotifyPage\r\n","import React, { useState } from 'react'\r\nimport { Layout, Menu } from 'antd'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\r\nimport { BreakpointProvider } from 'react-socks'\r\n\r\nimport Header from './components/Header/Header'\r\nimport Footer from './components/Footer/Footer'\r\n\r\nimport LandingPage from './pages/LandingPage/LandingPage'\r\nimport AboutPage from './pages/AboutPage/AboutPage'\r\nimport ResumePage from './pages/ResumePage/ResumePage'\r\nimport ProjectsPage from './pages/ProjectsPage/ProjectsPage'\r\nimport SpotifyPage from './pages/SpotifyPage/SpotifyPage'\r\n\r\nconst navBarMenuItems = [\r\n  <Menu.Item key=\"1\">\r\n    <Link to=\"/about\">\r\n      <p className=\"header-font\">ABOUT</p>\r\n    </Link>\r\n  </Menu.Item>,\r\n  <Menu.Item key=\"2\">\r\n    <Link to=\"/resume\">\r\n      <p className=\"header-font\">RESUME</p>\r\n    </Link>\r\n  </Menu.Item>,\r\n  <Menu.Item key=\"3\">\r\n    <Link to=\"/projects\">\r\n      <p className=\"header-font\">PROJECTS</p>\r\n    </Link>\r\n  </Menu.Item>,\r\n]\r\n\r\nconst App = () => {\r\n  const [isSiderCollapse, setSiderCollapse] = useState(true)\r\n\r\n  return (\r\n    <Router basename=\"/~tparkeen\">\r\n      <BreakpointProvider>\r\n        <Layout className=\"layout\">\r\n          <Layout className=\"content\">\r\n            <Header\r\n              isSiderCollapse={isSiderCollapse}\r\n              setSiderCollapse={setSiderCollapse}\r\n              navBarMenuItems={navBarMenuItems}\r\n            />\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <LandingPage />\r\n              </Route>\r\n              <Route path=\"/about\">\r\n                <AboutPage />\r\n              </Route>\r\n              <Route path=\"/resume\">\r\n                <ResumePage />\r\n              </Route>\r\n              <Route path=\"/projects\">\r\n                <ProjectsPage />\r\n              </Route>\r\n              <Route path=\"/spotify\">\r\n                <SpotifyPage />\r\n              </Route>\r\n            </Switch>\r\n            <Footer />\r\n          </Layout>\r\n          <Layout.Sider\r\n            className=\"navbar-responsive\"\r\n            trigger={null}\r\n            collapsible\r\n            collapsedWidth={0}\r\n            collapsed={isSiderCollapse}\r\n          >\r\n            <Menu mode=\"inline\">{navBarMenuItems}</Menu>\r\n          </Layout.Sider>\r\n        </Layout>\r\n      </BreakpointProvider>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport 'antd/dist/antd.css'\nimport './assets/styles/index.scss'\n\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 80;"],"sourceRoot":""}